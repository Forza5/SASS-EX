//변수를 생성할 때: '$'사용
$bgColor: red;
$font-h1: 28px;
$valid-sides: left, center, right; //(1, 2, 3), (-3, -2, -1)
$font-sizes: ("myh1": 45px, "myh2": 19px, "myp": 16px);

h1 {
    $spanColor: blue; //지역 변수
    color: $bgColor;
    font-size: map-get($font-sizes, "myp") * 2;
    //font-size: $bgColor;
    span {
        color: $spanColor;
    }
}

p {
    color: $spanColor;
    text-align: nth($valid-sides, 2);
}

/*
    - css에서 변수를 사용하는 기준
    
    -> 값이 두 번 이상 반복될때
    = 값을 기억하지 않고 변수명만을 가지고 style할 수 있다.
    
    -> 기존의 값을 다른 값으로 변경해야할 경우, 변수의 값만 변경하면 되기 때문에
    값이 수정될 가능성이 있다면 변수 생성을 고려
*/

//변수 type들
/*
    1. numbers: 1, 2, 20px, 1rem, 2em ...
    2. strings: "./images/sass.svg", bold, left, right, uppercase ...
    3. colors: green, red, #fff, rgba(255,255,255) ...
    4. booleans: true, false
    5. null
    6. lists
        $font-size : 10px 12px 16px; //폰트사이즈 리스트
        $image-file : photo_01, photo_02, photo_03 //이미지 파일명 리스트

        //아래와 같은 형태로 사용(순회도 가능)
        list.nth(10px 12px 16px, 2); // 12px
        list.nth([line1, line2, line3], -1); // line3

        // 아래와 같이 사용합니다.
        .test1 {
            font-size: nth($list: $font-size, $n: 2);
        }

        .test2 {
            font-size: nth($font-size, 2);
        }
        
        7. maps
            $font-weights: ("regular": 400, "medium": 500, "bold": 700); //글자 굵기 리스트

            //아래와 같은 형태로 사용
            map.get($font-weights, "medium"); // 500
            map.get($font-weights, "extra-bold"); // null

            .test1 {
                font-weight: map-get($font-weights, "medium"); // 500
            }
*/

//Lists
/*
    - Lists는 순서가 있는 값으로 값마다 index를 가지고 있다.
    -> lists를 만들려면 lists의 요소들을 ','나 공백 또는 일관성이 있는 '/'로 구분하여 생선한다.
    -> 다른 타입의 변수들과 다르게 특수 괄호를 사용하지 않아도 lists로 인식한다.
    -> lists에 들어있는 값의 index는 0부터 시작하는게 아닌 1부터 시작한다.

    - lists관련 내장함수
    --> append(list, value, [sperator]): lists의 값을 추가하는 함수
    --> index(list, value): lists의 값에 대한 index를 리턴하는 함수
    --> nth(list, n): lists의 index에 해당하는 값을 리턴하는 함수
    ex) $valid-sides: left, center, right;
    ex) .screen-box {
        text-align: nth($valid-sides, 1)
    }
*/

//Maps
/*
    - Maps는 ()괄호 안에 키:값의 형태로 저장하여 사용한다.
    -> 키와 값을 정의할 때, 키는 고유해야 하지만 키에 해당하는 값은 중복이 가능하다.
    -> 변수를 각각 선언하는 대신, 관련 있는 변수들을 한번에 모아 maps로 만들어서 사용할 수 있다.

    - maps관련 내장함수
    --> map-get(map, key): key에 해당하는 값을 리턴하는 함수
    --> map-keys(map): map에 들어있는 key전부를 리턴하는 함수
    --> map-values(map): map에 들어있는 값(value) 전부를 리턴하는 함수
    ex)$font-sizes: ("h1": 45px, "h2": 19px, "p": 16px)
    ex)section {
        h2 {
            font-size: map-get($font-sizes, "h1"); //45px
        }
        map-get($font-size, "h3"); //null
*/